{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport { useForkRef } from '../utils/reactHelpers';\nimport useEventCallback from '../utils/useEventCallback';\nimport withStyles from '../styles/withStyles';\nimport NoSsr from '../NoSsr';\nimport { useIsFocusVisible } from '../utils/focusVisible';\nimport TouchRipple from './TouchRipple';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'relative',\n    // Remove grey highlight\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    textDecoration: 'none',\n    // So we take precedent over the style of a native <a /> element.\n    color: 'inherit',\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$disabled': {\n      pointerEvents: 'none',\n      // Disable link interactions\n      cursor: 'default'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Pseudo-class applied to the root element if keyboard focused. */\n  focusVisible: {}\n};\n/**\n * `ButtonBase` contains as few styles as possible.\n * It aims to be a simple building block for creating a button.\n * It contains a load of style reset and some focus/ripple logic.\n */\n\nvar ButtonBase = React.forwardRef(function ButtonBase(props, ref) {\n  var action = props.action,\n      buttonRefProp = props.buttonRef,\n      _props$centerRipple = props.centerRipple,\n      centerRipple = _props$centerRipple === void 0 ? false : _props$centerRipple,\n      children = props.children,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      disabled = props.disabled,\n      _props$disableRipple = props.disableRipple,\n      disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple,\n      _props$disableTouchRi = props.disableTouchRipple,\n      disableTouchRipple = _props$disableTouchRi === void 0 ? false : _props$disableTouchRi,\n      _props$focusRipple = props.focusRipple,\n      focusRipple = _props$focusRipple === void 0 ? false : _props$focusRipple,\n      focusVisibleClassName = props.focusVisibleClassName,\n      onBlur = props.onBlur,\n      onClick = props.onClick,\n      onFocus = props.onFocus,\n      onFocusVisible = props.onFocusVisible,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      onMouseDown = props.onMouseDown,\n      onMouseLeave = props.onMouseLeave,\n      onMouseUp = props.onMouseUp,\n      onTouchEnd = props.onTouchEnd,\n      onTouchMove = props.onTouchMove,\n      onTouchStart = props.onTouchStart,\n      onDragLeave = props.onDragLeave,\n      _props$tabIndex = props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex,\n      TouchRippleProps = props.TouchRippleProps,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      other = _objectWithoutProperties(props, [\"action\", \"buttonRef\", \"centerRipple\", \"children\", \"classes\", \"className\", \"component\", \"disabled\", \"disableRipple\", \"disableTouchRipple\", \"focusRipple\", \"focusVisibleClassName\", \"onBlur\", \"onClick\", \"onFocus\", \"onFocusVisible\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onMouseLeave\", \"onMouseUp\", \"onTouchEnd\", \"onTouchMove\", \"onTouchStart\", \"onDragLeave\", \"tabIndex\", \"TouchRippleProps\", \"type\"]);\n\n  var buttonRef = React.useRef(null);\n\n  function getButtonNode() {\n    // #StrictMode ready\n    return ReactDOM.findDOMNode(buttonRef.current);\n  }\n\n  var rippleRef = React.useRef(null);\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  React.useImperativeHandle(action, function () {\n    return {\n      focusVisible: function focusVisible() {\n        setFocusVisible(true);\n        buttonRef.current.focus();\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    if (focusVisible && focusRipple && !disableRipple) {\n      rippleRef.current.pulsate();\n    }\n  }, [disableRipple, focusRipple, focusVisible]);\n\n  function useRippleHandler(rippleAction, eventCallback) {\n    var skipRippleAction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : disableTouchRipple;\n    return useEventCallback(function (event) {\n      if (eventCallback) {\n        eventCallback(event);\n      }\n\n      var ignore = event.defaultPrevented || skipRippleAction;\n\n      if (!ignore && rippleRef.current) {\n        rippleRef.current[rippleAction](event);\n      }\n\n      return true;\n    });\n  }\n\n  var handleMouseDown = useRippleHandler('start', onMouseDown);\n  var handleDragLeave = useRippleHandler('stop', onDragLeave);\n  var handleMouseUp = useRippleHandler('stop', onMouseUp);\n  var handleMouseLeave = useRippleHandler('stop', function (event) {\n    if (focusVisible) {\n      event.preventDefault();\n    }\n\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n  });\n  var handleTouchStart = useRippleHandler('start', onTouchStart);\n  var handleTouchEnd = useRippleHandler('stop', onTouchEnd);\n  var handleTouchMove = useRippleHandler('stop', onTouchMove);\n  var handleBlur = useRippleHandler('stop', function (event) {\n    if (focusVisible) {\n      onBlurVisible(event);\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  }, false);\n  var handleFocus = useEventCallback(function (event) {\n    if (disabled) {\n      return;\n    } // Fix for https://github.com/facebook/react/issues/7769\n\n\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n\n      if (onFocusVisible) {\n        onFocusVisible(event);\n      }\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  });\n  /**\n   * IE 11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat\n   */\n\n  var keydownRef = React.useRef(false);\n  var handleKeyDown = useEventCallback(function (event) {\n    // Check if key is already down to avoid repeats being counted as multiple activations\n    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {\n      keydownRef.current = true;\n      event.persist();\n      rippleRef.current.stop(event, function () {\n        rippleRef.current.start(event);\n      });\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n\n    var button = getButtonNode(); // Keyboard accessibility for non interactive elements\n\n    if (event.target === event.currentTarget && component && component !== 'button' && (event.key === ' ' || event.key === 'Enter') && !(button.tagName === 'A' && button.href)) {\n      event.preventDefault();\n\n      if (onClick) {\n        onClick(event);\n      }\n    }\n  });\n  var handleKeyUp = useEventCallback(function (event) {\n    if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible) {\n      keydownRef.current = false;\n      event.persist();\n      rippleRef.current.stop(event, function () {\n        rippleRef.current.pulsate(event);\n      });\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  });\n  var className = clsx(classes.root, classNameProp, focusVisible && [classes.focusVisible, focusVisibleClassName], disabled && classes.disabled);\n  var ComponentProp = component;\n\n  if (ComponentProp === 'button' && other.href) {\n    ComponentProp = 'a';\n  }\n\n  var buttonProps = {};\n\n  if (ComponentProp === 'button') {\n    buttonProps.type = type;\n    buttonProps.disabled = disabled;\n  } else {\n    if (ComponentProp !== 'a' || !other.href) {\n      buttonProps.role = 'button';\n    }\n\n    buttonProps['aria-disabled'] = disabled;\n  }\n\n  var handleUserRef = useForkRef(buttonRefProp, ref);\n  var handleOwnRef = useForkRef(focusVisibleRef, buttonRef);\n  var handleRef = useForkRef(handleUserRef, handleOwnRef);\n  return React.createElement(ComponentProp, _extends({\n    className: className,\n    onBlur: handleBlur,\n    onClick: onClick,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onMouseDown: handleMouseDown,\n    onMouseLeave: handleMouseLeave,\n    onMouseUp: handleMouseUp,\n    onDragLeave: handleDragLeave,\n    onTouchEnd: handleTouchEnd,\n    onTouchMove: handleTouchMove,\n    onTouchStart: handleTouchStart,\n    ref: handleRef,\n    tabIndex: disabled ? -1 : tabIndex\n  }, buttonProps, other), children, !disableRipple && !disabled ? React.createElement(NoSsr, null, React.createElement(TouchRipple, _extends({\n    ref: rippleRef,\n    center: centerRipple\n  }, TouchRippleProps))) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonBase.propTypes = {\n  /**\n   * A ref for imperative actions.\n   * It currently only supports `focusVisible()` action.\n   */\n  action: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Use that prop to pass a ref callback to the native button component.\n   * @deprecated Use `ref` instead\n   */\n  buttonRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * If `true`, the ripples will be centered.\n   * They won't start at the cursor interaction position.\n   */\n  centerRipple: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * If `true`, the base button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the touch ripple effect will be disabled.\n   */\n  disableTouchRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the base button will have a keyboard focus ripple.\n   * `disableRipple` must also be `false`.\n   */\n  focusRipple: PropTypes.bool,\n\n  /**\n   * This prop can help a person know which element has the keyboard focus.\n   * The class name will be applied when the element gain the focus through a keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/master/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onDragLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component is focused with a keyboard.\n   * We trigger a `onFocus` callback too.\n   */\n  onFocusVisible: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchMove: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Props applied to the `TouchRipple` element.\n   */\n  TouchRippleProps: PropTypes.object,\n\n  /**\n   * Used to control the button's purpose.\n   * This prop passes the value to the `type` attribute of the native button component.\n   */\n  type: PropTypes.oneOf(['submit', 'reset', 'button'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButtonBase'\n})(ButtonBase);","map":{"version":3,"sources":["/home/joni/tanzu-demo/apps/tanzustore/react-app/node_modules/@material-ui/core/esm/ButtonBase/ButtonBase.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","ReactDOM","clsx","elementTypeAcceptingRef","useForkRef","useEventCallback","withStyles","NoSsr","useIsFocusVisible","TouchRipple","styles","root","display","alignItems","justifyContent","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","textDecoration","color","borderStyle","pointerEvents","disabled","focusVisible","ButtonBase","forwardRef","props","ref","action","buttonRefProp","buttonRef","_props$centerRipple","centerRipple","children","classes","classNameProp","className","_props$component","component","_props$disableRipple","disableRipple","_props$disableTouchRi","disableTouchRipple","_props$focusRipple","focusRipple","focusVisibleClassName","onBlur","onClick","onFocus","onFocusVisible","onKeyDown","onKeyUp","onMouseDown","onMouseLeave","onMouseUp","onTouchEnd","onTouchMove","onTouchStart","onDragLeave","_props$tabIndex","tabIndex","TouchRippleProps","_props$type","type","other","useRef","getButtonNode","findDOMNode","current","rippleRef","_React$useState","useState","setFocusVisible","_useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","useImperativeHandle","focus","useEffect","pulsate","useRippleHandler","rippleAction","eventCallback","skipRippleAction","arguments","length","undefined","event","ignore","defaultPrevented","handleMouseDown","handleDragLeave","handleMouseUp","handleMouseLeave","preventDefault","handleTouchStart","handleTouchEnd","handleTouchMove","handleBlur","handleFocus","currentTarget","keydownRef","handleKeyDown","key","persist","stop","start","button","target","tagName","href","handleKeyUp","ComponentProp","buttonProps","role","handleUserRef","handleOwnRef","handleRef","createElement","center","process","env","NODE_ENV","propTypes","oneOfType","func","object","bool","node","isRequired","string","number","oneOf","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport { useForkRef } from '../utils/reactHelpers';\nimport useEventCallback from '../utils/useEventCallback';\nimport withStyles from '../styles/withStyles';\nimport NoSsr from '../NoSsr';\nimport { useIsFocusVisible } from '../utils/focusVisible';\nimport TouchRipple from './TouchRipple';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'relative',\n    // Remove grey highlight\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    textDecoration: 'none',\n    // So we take precedent over the style of a native <a /> element.\n    color: 'inherit',\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$disabled': {\n      pointerEvents: 'none',\n      // Disable link interactions\n      cursor: 'default'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Pseudo-class applied to the root element if keyboard focused. */\n  focusVisible: {}\n};\n/**\n * `ButtonBase` contains as few styles as possible.\n * It aims to be a simple building block for creating a button.\n * It contains a load of style reset and some focus/ripple logic.\n */\n\nvar ButtonBase = React.forwardRef(function ButtonBase(props, ref) {\n  var action = props.action,\n      buttonRefProp = props.buttonRef,\n      _props$centerRipple = props.centerRipple,\n      centerRipple = _props$centerRipple === void 0 ? false : _props$centerRipple,\n      children = props.children,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      disabled = props.disabled,\n      _props$disableRipple = props.disableRipple,\n      disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple,\n      _props$disableTouchRi = props.disableTouchRipple,\n      disableTouchRipple = _props$disableTouchRi === void 0 ? false : _props$disableTouchRi,\n      _props$focusRipple = props.focusRipple,\n      focusRipple = _props$focusRipple === void 0 ? false : _props$focusRipple,\n      focusVisibleClassName = props.focusVisibleClassName,\n      onBlur = props.onBlur,\n      onClick = props.onClick,\n      onFocus = props.onFocus,\n      onFocusVisible = props.onFocusVisible,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      onMouseDown = props.onMouseDown,\n      onMouseLeave = props.onMouseLeave,\n      onMouseUp = props.onMouseUp,\n      onTouchEnd = props.onTouchEnd,\n      onTouchMove = props.onTouchMove,\n      onTouchStart = props.onTouchStart,\n      onDragLeave = props.onDragLeave,\n      _props$tabIndex = props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex,\n      TouchRippleProps = props.TouchRippleProps,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      other = _objectWithoutProperties(props, [\"action\", \"buttonRef\", \"centerRipple\", \"children\", \"classes\", \"className\", \"component\", \"disabled\", \"disableRipple\", \"disableTouchRipple\", \"focusRipple\", \"focusVisibleClassName\", \"onBlur\", \"onClick\", \"onFocus\", \"onFocusVisible\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onMouseLeave\", \"onMouseUp\", \"onTouchEnd\", \"onTouchMove\", \"onTouchStart\", \"onDragLeave\", \"tabIndex\", \"TouchRippleProps\", \"type\"]);\n\n  var buttonRef = React.useRef(null);\n\n  function getButtonNode() {\n    // #StrictMode ready\n    return ReactDOM.findDOMNode(buttonRef.current);\n  }\n\n  var rippleRef = React.useRef(null);\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  React.useImperativeHandle(action, function () {\n    return {\n      focusVisible: function focusVisible() {\n        setFocusVisible(true);\n        buttonRef.current.focus();\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    if (focusVisible && focusRipple && !disableRipple) {\n      rippleRef.current.pulsate();\n    }\n  }, [disableRipple, focusRipple, focusVisible]);\n\n  function useRippleHandler(rippleAction, eventCallback) {\n    var skipRippleAction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : disableTouchRipple;\n    return useEventCallback(function (event) {\n      if (eventCallback) {\n        eventCallback(event);\n      }\n\n      var ignore = event.defaultPrevented || skipRippleAction;\n\n      if (!ignore && rippleRef.current) {\n        rippleRef.current[rippleAction](event);\n      }\n\n      return true;\n    });\n  }\n\n  var handleMouseDown = useRippleHandler('start', onMouseDown);\n  var handleDragLeave = useRippleHandler('stop', onDragLeave);\n  var handleMouseUp = useRippleHandler('stop', onMouseUp);\n  var handleMouseLeave = useRippleHandler('stop', function (event) {\n    if (focusVisible) {\n      event.preventDefault();\n    }\n\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n  });\n  var handleTouchStart = useRippleHandler('start', onTouchStart);\n  var handleTouchEnd = useRippleHandler('stop', onTouchEnd);\n  var handleTouchMove = useRippleHandler('stop', onTouchMove);\n  var handleBlur = useRippleHandler('stop', function (event) {\n    if (focusVisible) {\n      onBlurVisible(event);\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  }, false);\n  var handleFocus = useEventCallback(function (event) {\n    if (disabled) {\n      return;\n    } // Fix for https://github.com/facebook/react/issues/7769\n\n\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n\n      if (onFocusVisible) {\n        onFocusVisible(event);\n      }\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  });\n  /**\n   * IE 11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat\n   */\n\n  var keydownRef = React.useRef(false);\n  var handleKeyDown = useEventCallback(function (event) {\n    // Check if key is already down to avoid repeats being counted as multiple activations\n    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {\n      keydownRef.current = true;\n      event.persist();\n      rippleRef.current.stop(event, function () {\n        rippleRef.current.start(event);\n      });\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n\n    var button = getButtonNode(); // Keyboard accessibility for non interactive elements\n\n    if (event.target === event.currentTarget && component && component !== 'button' && (event.key === ' ' || event.key === 'Enter') && !(button.tagName === 'A' && button.href)) {\n      event.preventDefault();\n\n      if (onClick) {\n        onClick(event);\n      }\n    }\n  });\n  var handleKeyUp = useEventCallback(function (event) {\n    if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible) {\n      keydownRef.current = false;\n      event.persist();\n      rippleRef.current.stop(event, function () {\n        rippleRef.current.pulsate(event);\n      });\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  });\n  var className = clsx(classes.root, classNameProp, focusVisible && [classes.focusVisible, focusVisibleClassName], disabled && classes.disabled);\n  var ComponentProp = component;\n\n  if (ComponentProp === 'button' && other.href) {\n    ComponentProp = 'a';\n  }\n\n  var buttonProps = {};\n\n  if (ComponentProp === 'button') {\n    buttonProps.type = type;\n    buttonProps.disabled = disabled;\n  } else {\n    if (ComponentProp !== 'a' || !other.href) {\n      buttonProps.role = 'button';\n    }\n\n    buttonProps['aria-disabled'] = disabled;\n  }\n\n  var handleUserRef = useForkRef(buttonRefProp, ref);\n  var handleOwnRef = useForkRef(focusVisibleRef, buttonRef);\n  var handleRef = useForkRef(handleUserRef, handleOwnRef);\n  return React.createElement(ComponentProp, _extends({\n    className: className,\n    onBlur: handleBlur,\n    onClick: onClick,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onMouseDown: handleMouseDown,\n    onMouseLeave: handleMouseLeave,\n    onMouseUp: handleMouseUp,\n    onDragLeave: handleDragLeave,\n    onTouchEnd: handleTouchEnd,\n    onTouchMove: handleTouchMove,\n    onTouchStart: handleTouchStart,\n    ref: handleRef,\n    tabIndex: disabled ? -1 : tabIndex\n  }, buttonProps, other), children, !disableRipple && !disabled ? React.createElement(NoSsr, null, React.createElement(TouchRipple, _extends({\n    ref: rippleRef,\n    center: centerRipple\n  }, TouchRippleProps))) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonBase.propTypes = {\n  /**\n   * A ref for imperative actions.\n   * It currently only supports `focusVisible()` action.\n   */\n  action: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Use that prop to pass a ref callback to the native button component.\n   * @deprecated Use `ref` instead\n   */\n  buttonRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * If `true`, the ripples will be centered.\n   * They won't start at the cursor interaction position.\n   */\n  centerRipple: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * If `true`, the base button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the touch ripple effect will be disabled.\n   */\n  disableTouchRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the base button will have a keyboard focus ripple.\n   * `disableRipple` must also be `false`.\n   */\n  focusRipple: PropTypes.bool,\n\n  /**\n   * This prop can help a person know which element has the keyboard focus.\n   * The class name will be applied when the element gain the focus through a keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/master/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onDragLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component is focused with a keyboard.\n   * We trigger a `onFocus` callback too.\n   */\n  onFocusVisible: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchMove: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Props applied to the `TouchRipple` element.\n   */\n  TouchRippleProps: PropTypes.object,\n\n  /**\n   * Used to control the button's purpose.\n   * This prop passes the value to the `type` attribute of the native button component.\n   */\n  type: PropTypes.oneOf(['submit', 'reset', 'button'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButtonBase'\n})(ButtonBase);"]},"metadata":{},"sourceType":"module"}